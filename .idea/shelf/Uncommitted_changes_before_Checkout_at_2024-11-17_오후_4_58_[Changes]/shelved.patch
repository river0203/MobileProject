Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.MobileProject\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision c14870b475bbfa2750d2c8e7067fc7f93bf09b3b)
+++ b/app/src/main/AndroidManifest.xml	(date 1731830255770)
@@ -18,10 +18,14 @@
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <activity android:name=".Plus_Main_Page"
+            android:exported="true"/>
+        <activity android:name=".Plus_Plus_Page"
+            android:exported="true"/>
+
     </application>
     <uses-permission android:name="android.permission.INTERNET" />
 </manifest>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c14870b475bbfa2750d2c8e7067fc7f93bf09b3b)
+++ b/.idea/misc.xml	(date 1731830287751)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
Index: app/src/main/java/com/example/mobileproject/Ingredient_Item_Init.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mobileproject/Ingredient_Item_Init.java b/app/src/main/java/com/example/mobileproject/Ingredient_Item_Init.java
new file mode 100644
--- /dev/null	(date 1731830287763)
+++ b/app/src/main/java/com/example/mobileproject/Ingredient_Item_Init.java	(date 1731830287763)
@@ -0,0 +1,19 @@
+package com.example.mobileproject;
+
+public class Ingredient_Item_Init {
+    private String ingredint_name;
+    private int quantity;
+
+    public Ingredient_Item_Init(String name, int quantity) {
+        this.ingredint_name = name;
+        this.quantity = quantity;
+    }
+
+    public String getIngredint_name(){
+        return ingredint_name;
+    }
+
+    public int getQuantity(){
+        return quantity;
+    }
+}
Index: app/src/main/java/com/example/mobileproject/Ingredient_Adapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mobileproject/Ingredient_Adapter.java b/app/src/main/java/com/example/mobileproject/Ingredient_Adapter.java
new file mode 100644
--- /dev/null	(date 1731830287711)
+++ b/app/src/main/java/com/example/mobileproject/Ingredient_Adapter.java	(date 1731830287711)
@@ -0,0 +1,52 @@
+package com.example.mobileproject;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import java.util.List;
+
+public class Ingredient_Adapter extends RecyclerView.Adapter<Ingredient_Adapter.ViewHolder> {
+    private Context context;
+    private List<Ingredient_Item_Init> ingredientItemList;
+
+    public Ingredient_Adapter(Context context, List<Ingredient_Item_Init> ingredientItemList) {
+        this.context = context;
+        this.ingredientItemList = ingredientItemList;
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View view = LayoutInflater.from(context).inflate(R.layout.ingredient_item, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
+        Ingredient_Item_Init currentItem = ingredientItemList.get(position);
+        holder.ingredientName.setText(currentItem.getIngredint_name());
+        holder.ingredientQuantity.setText(String.valueOf(currentItem.getQuantity()));
+    }
+
+    @Override
+    public int getItemCount() {
+        return ingredientItemList.size();
+    }
+
+    public static class ViewHolder extends RecyclerView.ViewHolder {
+        TextView ingredientName;
+        TextView ingredientQuantity;
+
+        public ViewHolder(@NonNull View itemView) {
+            super(itemView);
+            ingredientName = itemView.findViewById(R.id.ingredient_name);
+            ingredientQuantity = itemView.findViewById(R.id.ingredient_quantity);
+        }
+    }
+}
Index: app/src/main/java/com/example/mobileproject/Plus_Plus_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mobileproject/Plus_Plus_Page.java b/app/src/main/java/com/example/mobileproject/Plus_Plus_Page.java
new file mode 100644
--- /dev/null	(date 1731830287733)
+++ b/app/src/main/java/com/example/mobileproject/Plus_Plus_Page.java	(date 1731830287733)
@@ -0,0 +1,82 @@
+package com.example.mobileproject;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+public class Plus_Plus_Page extends AppCompatActivity {
+    private int quantity = 0; // 수량 기본값
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.plus_plus_page);
+
+        EditText nameInput = findViewById(R.id.name_input); // 이름 입력 필드
+        EditText quantityInput = findViewById(R.id.editTextNumber); // 수량 입력 필드
+        Button minusButton = findViewById(R.id.button_minus); // 수량 감소 버튼
+        Button plusButton = findViewById(R.id.button_plus); // 수량 증가 버튼
+        Button saveButton = findViewById(R.id.save_ingredient); // 저장 버튼
+
+        // 초기 수량 표시
+        quantityInput.setText(String.valueOf(quantity));
+
+        // - 버튼 클릭 시 수량 감소
+        minusButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (quantity > 0) {
+                    quantity--;
+                    quantityInput.setText(String.valueOf(quantity));
+                } else {
+                    Toast.makeText(Plus_Plus_Page.this, "수량은 0보다 작을 수 없습니다!", Toast.LENGTH_SHORT).show();
+                }
+            }
+        });
+
+        // + 버튼 클릭 시 수량 증가
+        plusButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                quantity++;
+                quantityInput.setText(String.valueOf(quantity));
+            }
+        });
+
+        // 수량 입력 필드 클릭 시 수량 직접 입력
+        quantityInput.setOnFocusChangeListener((view, hasFocus) -> {
+            if (!hasFocus) {
+                try {
+                    quantity = Integer.parseInt(quantityInput.getText().toString());
+                } catch (NumberFormatException e) {
+                    quantity = 0; // 잘못된 입력 시 기본값으로 초기화
+                    quantityInput.setText(String.valueOf(quantity));
+                }
+            }
+        });
+
+        // 저장 버튼 클릭 시 데이터 반환
+        saveButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                String name = nameInput.getText().toString();
+
+                if (name.isEmpty() || quantity <= 0) {
+                    Toast.makeText(Plus_Plus_Page.this, "유효한 이름과 수량을 입력하세요!", Toast.LENGTH_SHORT).show();
+                    return;
+                }
+
+                Intent resultIntent = new Intent();
+                resultIntent.putExtra("name", name);
+                resultIntent.putExtra("quantity", quantity);
+                setResult(RESULT_OK, resultIntent);
+                finish(); // 현재 액티비티 종료 및 데이터 반환
+            }
+        });
+    }
+}
Index: app/src/main/java/com/example/mobileproject/Plus_Main_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mobileproject/Plus_Main_Page.java b/app/src/main/java/com/example/mobileproject/Plus_Main_Page.java
new file mode 100644
--- /dev/null	(date 1731830287745)
+++ b/app/src/main/java/com/example/mobileproject/Plus_Main_Page.java	(date 1731830287745)
@@ -0,0 +1,82 @@
+package com.example.mobileproject;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Plus_Main_Page extends AppCompatActivity {
+    private static final String TAG = "Plus_Main_Page";
+
+    private List<Ingredient_Item_Init> ingredientItemList = new ArrayList<>();
+    private Ingredient_Adapter ingredientAdapter;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.plus_main_page);
+
+        // RecyclerView 초기화
+        RecyclerView recyclerView = findViewById(R.id.ingredient_listview);
+        if (recyclerView == null) {
+            Log.e(TAG, "RecyclerView (ingredient_listview) is null. Check XML layout.");
+            return; // RecyclerView가 없으면 실행 중단
+        }
+
+        recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        ingredientAdapter = new Ingredient_Adapter(this, ingredientItemList);
+        recyclerView.setAdapter(ingredientAdapter);
+        Log.d(TAG, "RecyclerView and adapter initialized successfully.");
+
+        // Plus++ 페이지로 이동 버튼
+        Button plus_PlusButton = findViewById(R.id.plus_plus_page);
+        if (plus_PlusButton == null) {
+            Log.e(TAG, "Button (plus_plus_page) is null. Check XML layout.");
+            return; // 버튼이 없으면 실행 중단
+        }
+
+        plus_PlusButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Log.d(TAG, "Navigating to Plus_Plus_Page...");
+                Intent intent = new Intent(Plus_Main_Page.this, Plus_Plus_Page.class);
+                startActivityForResult(intent, 100); // 결과를 반환받기 위해 사용
+            }
+        });
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        // Page2에서 반환된 데이터 처리
+        if (requestCode == 100 && resultCode == RESULT_OK) {
+            if (data == null) {
+                Log.e(TAG, "Returned intent data is null.");
+                return;
+            }
+
+            String name = data.getStringExtra("name");
+            int quantity = data.getIntExtra("quantity", 0);
+
+            if (name == null || name.isEmpty()) {
+                Log.e(TAG, "Invalid name received from Plus_Plus_Page.");
+                return;
+            }
+
+            Log.d(TAG, "Received name: " + name + ", quantity: " + quantity);
+            ingredientItemList.add(new Ingredient_Item_Init(name, quantity));
+            ingredientAdapter.notifyDataSetChanged();
+            Log.d(TAG, "RecyclerView updated with new item.");
+        }
+    }
+}
